{
  # Spark relation com.vesoft.exchange.common.config
  spark: {
    app: {
      name: Nebula Exchange 2.0
    }

    master:local

    driver: {
      cores: 1
      maxResultSize: 1G
    }

    executor: {
        memory:1G
    }

    cores:{
      max: 16
    }
  }

  # if the hive is hive-on-spark with derby mode， you can ignore this hive configure
  # get the com.vesoft.exchange.common.config values from file $HIVE_HOME/conf/hive-site.xml or hive-default.xml

  #  hive: {
  #    warehouse: "hdfs://NAMENODE_IP:9000/apps/svr/hive-xxx/warehouse/"
  #    connectionURL: "jdbc:mysql://your_ip:3306/hive_spark?characterEncoding=UTF-8"
  #    connectionDriverName: "com.mysql.jdbc.Driver"
  #    connectionUserName: "user"
  #    connectionPassword: "password"
  #  }


  # Nebula Graph relation com.vesoft.exchange.common.config
  nebula: {
    address:{
      graph:["127.0.0.1:9669"]
      meta:["127.0.0.1:9559"]
    }
    user: root
    pswd: nebula
    space: test

    bolt.url:"bolt://192.168.8.87:7687/"
    bolt.user:"neo4j"
    bolt.password:"nebula"
  }

  # Processing tags
  # There are tag com.vesoft.exchange.common.config examples for different dataSources.
  tags: [


    # neo4j
    {
      name: tag-name-4
      type: {
        source: neo4j
        sink: client
      }
      server: "bolt://127.0.0.1:7687"
      user: neo4j
      password: neo4j
      exec: "MATCH (n:对公客户) RETURN id(n) as id"
      fields: [neo4j-field-0, neo4j-field-1]
      nebula.fields: [nebula-field-0, nebula-field-1]
      vertex: {
        field:neo4j-field-0
        # policy:hash
      }
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
   }

  ]

  # Processing edges
  # There are edge com.vesoft.exchange.common.config examples for different dataSources.
  edges: [

    # Neo4j
    {
      name: edge-name-3
      type: {
        source: neo4j
        sink: client
      }
      server: "bolt://127.0.0.1:7687"
      user: neo4j
      password: neo4j
      exec: "match p=() -[r:p]->() return r.pop1, r.pop2, r.pop3, r.pop4"
      fields: [neo4j-field-0, neo4j-field-1]
      nebula.fields: [nebula-field-0, nebula-field-1]
      source: {
        field: a.neo4j-source-field
      }
      target: {
        field: b.neo4j-target-field
      }
      ranking: neo4j-field-2
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
    }
  ]
}
